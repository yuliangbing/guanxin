<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zptc.gx.branch.mapper.BranchIntroductionMapper" >
  <resultMap id="BaseResultMap" type="com.zptc.gx.branch.entity.BranchIntroduction" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="specialty_info" property="specialtyInfo" jdbcType="LONGVARCHAR" />
    <result column="branch_characteristic" property="branchCharacteristic" jdbcType="LONGVARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_user" property="modifyUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, specialty_info, branch_characteristic, date, status, create_time, create_user, modify_time, modify_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from branch_introduction
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zptc.gx.branch.entity.BranchIntroduction" >
    delete from branch_introduction
    where id = #{id,jdbcType=BIGINT}
  </delete>
 <!--软删除改变stauts  -->
  <update id="deleteBranchIntroductionById" parameterType="com.zptc.gx.branch.entity.BranchIntroduction" >
	    update branch_introduction
	    <set>
	    	<if test="status !=null and status !=''">
				status = #{status,jdbcType=INTEGER}
			</if>
	    </set>  
	    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.zptc.gx.branch.entity.BranchIntroduction" >
    insert into branch_introduction (id, code, name, 
      date, status, create_time, 
      create_user, modify_time, modify_user, 
      specialty_info, branch_characteristic
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{date,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, #{modifyUser,jdbcType=VARCHAR}, 
      #{specialtyInfo,jdbcType=LONGVARCHAR}, #{branchCharacteristic,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zptc.gx.branch.entity.BranchIntroduction" >
    insert into branch_introduction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUser != null" >
        modify_user,
      </if>
      <if test="specialtyInfo != null" >
        specialty_info,
      </if>
      <if test="branchCharacteristic != null" >
        branch_characteristic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="specialtyInfo != null" >
        #{specialtyInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="branchCharacteristic != null" >
        #{branchCharacteristic,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zptc.gx.branch.entity.BranchIntroduction" >
    update branch_introduction
    <set >
      <!-- <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if> -->
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="specialtyInfo != null" >
        specialty_info = #{specialtyInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="branchCharacteristic != null" >
        branch_characteristic = #{branchCharacteristic,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zptc.gx.branch.entity.BranchIntroduction" >
    update branch_introduction
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user = #{modifyUser,jdbcType=VARCHAR},
      specialty_info = #{specialtyInfo,jdbcType=LONGVARCHAR},
      branch_characteristic = #{branchCharacteristic,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zptc.gx.branch.entity.BranchIntroduction" >
    update branch_introduction
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user = #{modifyUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 查询文本数据 -->
  <select id="getBranchText" resultType="map" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from branch_introduction
     <where>
			 <if test="date1 != null and date1 != ''and date2 != null and date2 !=''">
			<!-- and datediff(day,date1,date2,#{date1,jdbcType=TIMESTAMP},#{date1,jdbcType=TIMESTAMP}) -->
			and date between #{date1,jdbcType=VARCHAR} and #{date2,jdbcType=VARCHAR}
		</if>
			<if test="specialty_info != null and specialty_info != ''">
				and instr(specialty_info,#{specialty_info,jdbcType=VARCHAR})
			</if>
			<if test="branch_characteristic != null and branch_characteristic != ''">
				and instr(branch_characteristic,#{branch_characteristic,jdbcType=VARCHAR})
			</if>
	    	<if test="status !=null and status != ''">
				and status = #{status,jdbcType=INTEGER}
			</if>
	    </where>
	    limit #{pages,jdbcType=INTEGER},#{limit,jdbcType=INTEGER};
  </select>
  <!-- status查询 -->
  <select id="getBranchStatus" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from branch_introduction
     <where>
			 <if test="date1 != null and date1 != ''and date2 != null and date2 !=''">
			<!-- and datediff(day,date1,date2,#{date1,jdbcType=TIMESTAMP},#{date1,jdbcType=TIMESTAMP}) -->
			and date between #{date1,jdbcType=VARCHAR} and #{date2,jdbcType=VARCHAR}
		</if>
			<if test="specialty_info != null and specialty_info != ''">
				and instr(specialty_info,#{specialty_info,jdbcType=VARCHAR})
			</if>
			<if test="branch_characteristic != null and branch_characteristic != ''">
				and instr(branch_characteristic,#{branch_characteristic,jdbcType=VARCHAR})
			</if>
	    	<if test="status !=null and status != ''">
				and status = #{status,jdbcType=INTEGER}
			</if>
	    </where>
  </select>
</mapper>