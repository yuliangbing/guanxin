<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zptc.gx.specialty.mapper.TrainingEnvironmentConstructionMapper" >
  <resultMap id="BaseResultMap" type="com.zptc.gx.specialty.entity.TrainingEnvironmentConstruction" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="participants" property="participants" jdbcType="VARCHAR" />
    <result column="specialty_id" property="specialtyId" jdbcType="BIGINT" />
    <result column="specialty_name" property="specialtyName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_user" property="modifyUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, date, content, participants, specialty_id, specialty_name, status, create_time, 
    create_user, modify_time, modify_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from training_environment_construction
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from training_environment_construction
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zptc.gx.specialty.entity.TrainingEnvironmentConstruction" >
    insert into training_environment_construction (id, date, content, 
      participants, specialty_id, specialty_name, 
      status, create_time, create_user, 
      modify_time, modify_user)
    values (#{id,jdbcType=BIGINT}, #{date,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, 
      #{participants,jdbcType=VARCHAR}, #{specialtyId,jdbcType=BIGINT}, #{specialtyName,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{modifyUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zptc.gx.specialty.entity.TrainingEnvironmentConstruction" >
    insert into training_environment_construction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="participants != null" >
        participants,
      </if>
      <if test="specialtyId != null" >
        specialty_id,
      </if>
      <if test="specialtyName != null" >
        specialty_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUser != null" >
        modify_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="participants != null" >
        #{participants,jdbcType=VARCHAR},
      </if>
      <if test="specialtyId != null" >
        #{specialtyId,jdbcType=BIGINT},
      </if>
      <if test="specialtyName != null" >
        #{specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        #{modifyUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zptc.gx.specialty.entity.TrainingEnvironmentConstruction" >
    update training_environment_construction
    <set >
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="participants != null" >
        participants = #{participants,jdbcType=VARCHAR},
      </if>
      <if test="specialtyId != null" >
        specialty_id = #{specialtyId,jdbcType=BIGINT},
      </if>
      <if test="specialtyName != null" >
        specialty_name = #{specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zptc.gx.specialty.entity.TrainingEnvironmentConstruction" >
    update training_environment_construction
    set date = #{date,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      participants = #{participants,jdbcType=VARCHAR},
      specialty_id = #{specialtyId,jdbcType=BIGINT},
      specialty_name = #{specialtyName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user = #{modifyUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!--根据status修改状态(删除)-->
<update id="modifyTrainingEnvironmentConstructionDel" parameterType="com.zptc.gx.specialty.entity.TrainingEnvironmentConstruction" >
	    update training_environment_construction
	    <set>
	    	<if test="status !=null and status !=''">
				status = #{status,jdbcType=INTEGER}
			</if>
	    </set>  
	    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 查询列表数据 -->
  <select id="getTrainingEnvironmentConstructionList" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from training_environment_construction
    <where>
    	 <if test="date1 != null and date1 != ''and date2 != null and date2 !=''">
			<!-- and datediff(day,date1,date2,#{date1,jdbcType=TIMESTAMP},#{date1,jdbcType=TIMESTAMP}) -->
			and date between #{date1,jdbcType=VARCHAR} and #{date2,jdbcType=VARCHAR}
		</if>
		<if test="content != null and content != ''">
			and instr(content,#{content,jdbcType=VARCHAR})
		</if>
		<if test="participants != null and participants != ''">
			and instr(participants,#{participants,jdbcType=VARCHAR})
		</if>
		<!-- <if test="specialtyId != null and specialtyId != ''">
			and instr(specialtyId,#{specialtyId,jdbcType=BIGINT})
		</if> -->
		<if test="specialtyName != null and specialtyName != ''">
			and instr(specialtyName,#{specialtyName,jdbcType=VARCHAR})
		</if>
		<if test="status !=null and status != ''">
					and status = #{status,jdbcType=INTEGER}
				</if>
	</where>
    limit #{pages,jdbcType=INTEGER},#{limit,jdbcType=INTEGER};
  </select>
  <!--统计数据条数-->
  <select id="selectCounts" resultType="int" parameterType="map">
		select
			count(*)
		from
			training_environment_construction
			    <where>
    	
		 <if test="date1 != null and date1 != ''and date2 != null and date2 !=''">
			<!-- and datediff(day,date1,date2,#{date1,jdbcType=TIMESTAMP},#{date1,jdbcType=TIMESTAMP}) -->
			and date between #{date1,jdbcType=VARCHAR} and #{date2,jdbcType=VARCHAR}
		</if>
		<if test="content != null and content != ''">
			and instr(content,#{content,jdbcType=VARCHAR})
		</if>
		<if test="participants != null and participants != ''">
			and instr(participants,#{participants,jdbcType=VARCHAR})
		</if>
		<!-- <if test="specialtyId != null and specialtyId != ''">
			and instr(specialtyId,#{specialtyId,jdbcType=BIGINT})
		</if> -->
		<if test="specialtyName != null and specialtyName != ''">
			and instr(specialtyName,#{specialtyName,jdbcType=VARCHAR})
		</if>
		<if test="status !=null and status != ''">
					and status = #{status,jdbcType=INTEGER}
				</if>
	</where>
	</select>
</mapper>